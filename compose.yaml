services:
  # postgres-indexer:
  #   image: postgres:15           
  #   environment:
  #     POSTGRES_USER: postgres      
  #     POSTGRES_PASSWORD: postgres 
  #     POSTGRES_DB: default    
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 1s
  #     timeout: 3s
  #     retries: 5
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data # Persist data on the host

  # indexer:
  #   build: 
  #     context: ./indexer
  #     target: dev
  #   volumes:
  #     - ./indexer/src:/app/src
  #     - ./indexer/ponder.config.ts:/app/ponder.config.ts
  #     - ./indexer/ponder.schema.ts:/app/ponder.schema.ts
  #   depends_on:
  #     postgres-indexer:
  #       condition: service_healthy
  #   env_file: 
  #     - ./indexer/.env.local
  #   ports:
  #     - "42069:42069"
    
  postgres-cms:
    image: postgres:15           
    environment:
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres 
      POSTGRES_DB: default    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - postgres_cms_data:/var/lib/postgresql/data # Persist data on the host
    ports:
      - "5432:5432"

  cms:
    build: 
      context: ./cms
      target: dev
    volumes:
      - ./cms/src:/app/src
      - cms_media:/app/media 
    depends_on:
      postgres-cms:
        condition: service_healthy
    env_file: 
      - cms/.env
    ports:
      - "3001:3001"
    
  # web:
  #   build: 
  #     context: .
  #     dockerfile: apps/web/Dockerfile
  #     target: dev
  #   volumes:
  #     - ./apps/web/src:/app/apps/web/src
  #     - ./apps/web/next.config.js:/app/apps/web/next.config.js
  #     - ./apps/web/tsconfig.json:/app/apps/web/tsconfig.json
  #     - ./apps/web/codegen.ts:/app/apps/web/codegen.ts
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     - WATCHPACK_POLLING=true
  #   env_file: 
  #     - apps/web/.env
  #   ports:
  #     - "3000:3000"

volumes:
  postgres_data:
  postgres_cms_data:
  cms_media:
